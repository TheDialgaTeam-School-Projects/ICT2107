// Guo Zhi Yong and Huang YiYi - GUI
// Jerry Wang - JFreeChart

package analyzer.project.views;

import analyzer.project.models.Covid19Case;
import analyzer.project.models.Covid19GraphViewModel;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.CategoryDataset;
import org.jfree.data.category.DefaultCategoryDataset;

import javax.swing.*;
import java.awt.*;
import java.io.IOException;

public class Covid19GraphView extends AbstractView {
    private static final String VIEW_TITLE = "Covid-19 Graph View";

    private JPanel panel;
    private JComboBox<Object> comboBox;
    private JPanel chart;
    private JButton loadButton;

    private Covid19GraphViewModel viewModel;

    public Covid19GraphView() throws IOException {
        viewModel = new Covid19GraphViewModel();

        createComboBoxUIComponents();
        createButtonsUIComponents();
    }

    @Override
    protected String getTitle() {
        return VIEW_TITLE;
    }

    @Override
    protected JPanel getPanel() {
        return panel;
    }

    private void createComboBoxUIComponents() {
        comboBox.setModel(new DefaultComboBoxModel<>(viewModel.getCovid19Countries().toArray()));
    }

    private void createButtonsUIComponents() {
        loadButton.addActionListener(e -> {
            final String selectedCountry = (String) comboBox.getSelectedItem();
            final CategoryDataset dataset = createDataset(selectedCountry);

            final JFreeChart freeChart = ChartFactory.createLineChart(selectedCountry, "Number of Days since 22 January 2020", "Cases", dataset, PlotOrientation.VERTICAL, true, true, false);
            freeChart.getCategoryPlot().getDomainAxis().setMaximumCategoryLabelWidthRatio(100);
            freeChart.getPlot().setBackgroundPaint(Color.white);

            final LineAndShapeRenderer lineAndShapeRenderer = (LineAndShapeRenderer) freeChart.getCategoryPlot().getRenderer();
            lineAndShapeRenderer.setBaseShapesVisible(true);
            lineAndShapeRenderer.setSeriesPaint(3, Color.orange);

            final ChartFrame chartFrame = new ChartFrame("Line Chart", freeChart);

            final GridConstraints gridConstraints = new GridConstraints();
            gridConstraints.setColumn(0);
            gridConstraints.setRow(0);
            gridConstraints.setHSizePolicy(GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW);
            gridConstraints.setVSizePolicy(GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW);
            gridConstraints.setFill(GridConstraints.FILL_BOTH);

            chart.removeAll();
            chart.invalidate();
            chart.updateUI();
            chart.add(chartFrame.getChartPanel(), gridConstraints);
        });
    }

    private CategoryDataset createDataset(String country) {
        final DefaultCategoryDataset dataset = new DefaultCategoryDataset();
        final Covid19Case covid19Case = viewModel.getCovid19CaseByCountry(country);

        for (int i = 0; i < covid19Case.getConfirmed().length; i++) {
            dataset.addValue(covid19Case.getConfirmed(i), "Confirmed", String.format("%d", i));
            dataset.addValue(covid19Case.getDeaths(i), "Deaths", String.format("%d", i));
            dataset.addValue(covid19Case.getRecovered(i), "Recovered", String.format("%d", i));
            dataset.addValue(covid19Case.getActive(i), "Active", String.format("%d", i));
        }

        return dataset;
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel = new JPanel();
        panel.setLayout(new GridLayoutManager(3, 2, new Insets(8, 8, 8, 8), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Country");
        panel.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        chart = new JPanel();
        chart.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(chart, new GridConstraints(1, 0, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        comboBox = new JComboBox();
        panel.add(comboBox, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1));
        panel.add(panel1, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        loadButton = new JButton();
        loadButton.setText("Load");
        panel1.add(loadButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        panel1.add(spacer1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel;
    }
}
